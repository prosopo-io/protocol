name: Rust

on:
  push:
    branches: [ master, workflow ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Build and Run tests
      run: |
        cd contracts
        rustup update stable
        rustup update nightly
        rustup target add wasm32-unknown-unknown --toolchain nightly
        cargo +nightly test --no-default-features --features std,ink-experimental-engine --verbose -- --nocapture
        cargo +nightly test --no-default-features --features std --verbose -- --nocapture
    - name: Get Coverage for badge
      run: |
        cd contracts
        cargo install cargo-tarpaulin
        SUMMARY="$(cargo +nightly tarpaulin --no-default-features --features std,ink-experimental-engine --verbose -- --nocapture | tail -1)"
        echo "COVERAGE=$(echo ${SUMMARY:0:5})" >> $GITHUB_ENV
        # var REF = 'refs/pull/27/merge.json';
        REF=${{ github.ref }}
        # console.log('github.ref: ' + REF);
        echo "github.ref: $REF"
        # var PATHS = REF.split('/');
        IFS='/' read -ra PATHS <<< "$REF"
        # var BRANCH_NAME = PATHS[1] + PATHS[2];
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        # console.log(BRANCH_NAME); // 'pull_27'
        echo $BRANCH_NAME
        # process.env.BRANCH = 'pull_27';
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
    - name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 4e3350c273f5173afc45b6ce74a97cb2
        filename: protocol__${{ env.BRANCH }}.json
        label: Test Coverage
        message: ${{ env.COVERAGE }}
        color: green
        namedLogo: jest

    - name: Update the Badge URL in the pull request body
      run: |
        body=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/prosopo-io/protocol/pulls/${{ github.event.pull_request.number }} | jq .body | sed -En "s/protocol__pull_##.json/protocol__pull_${{ github.event.pull_request.number }}.json/p")
        curl \
          -X PATCH \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/prosopo-io/protocol/pulls/${{ github.event.pull_request.number }} \
          -d '{"body":"$body"}'